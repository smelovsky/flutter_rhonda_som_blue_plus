//
// Copyright (C) 2016-2019 Rhonda Software.
// All rights reserved.
//

syntax = "proto2";

package CameraExt.Capture.Video;

// Resolution of video
enum Mode {
    MODE_480P30_4X3	= 0;
    MODE_720P30_4X3	= 1;
    MODE_720P30     = 2;
    MODE_1080P30    = 3;
    MODE_1080P60    = 4;
    MODE_4KP30      = 5;
}

// Video muxer
enum Muxer {
    FILE    = 0;
    STREAM  = 1;
    UVC     = 2;
}

// Video codec
enum Codec {
    H264    = 0;
    H265    = 1;
    MJPEG   = 2;
	NV12	= 3;
}

// Video configuraion
// This is data type message, it can't be sended direclty
message Config {
    optional Mode mode          = 1;
    optional uint32 bitrate     = 2;
    optional Codec codec        = 3;
}

// Request to set video settings for further sessions.
// If current session is active it will ignore a new settings.
// Camera does not store settings on NAND. Settings will be lost after reboot.
// allowed_state: Any
// type_url: CameraExt.Capture.Video.SetSettings
// Controller->Camera
message SetSettings {
    // Required muxer to be configured
    // UVC muxer could be configured only at boot by config.yaml
    // Only FILE and STREAM muxers are allowed to be configured
    // Codec parameter is allowed only for FILE muxer (allowed codecs to be set H264, H265)
    optional Muxer muxer = 1;

    // Video configuration. Missing fields in config are ignored.
    optional Config config = 2;

    // Camera saves settings in case of success
    // state_on_success: No change
    // type_url: CameraExt.Capture.Video.SetSettings.Response
    message Response {
        // Return codes:
        //  STATUS_SUCCESS
        //  STATUS_INVALID_VALUE - Returned in case of wrong configuration or muxer parameter is not set
        optional ErrorCode ret = 1;
    }
}

// Request to get current settings of video
// allowed_state: Any
// type_url: CameraExt.Capture.Video.GetSettings
// Controller->Camera
message GetSettings {
    optional Muxer muxer = 1; // Video muxer to get settings for

    // state_on_success: No change
    // type_url: CameraExt.Capture.Video.GetSettings.Response
    message Response {
        // Return codes:
        //  STATUS_SUCCESS
        //  STATUS_INVALID_VALUE - If muxer parameter is not set
        optional ErrorCode ret = 1;

        optional Config config = 2; // Config parameter is filled in case of success result
    }
}

enum ErrorCode {
    STATUS_SUCCESS = 0;

    // Range of 1 - 99 is for generic errors
    STATUS_UNKNOWN_ERROR = 1;
    STATUS_HARDWARE_ERROR = 2;

    // Range of 100 - 199 is for protocol errors
    STATUS_UNKNOWN_REQUEST = 100;
    STATUS_INVALID_SYNTAX = 101;
    STATUS_INVALID_VALUE = 102;
    STATUS_NOT_IMPLEMENTED = 103;
    STATUS_NOT_AUTHORIZED = 104;
    STATUS_AUTHORIZATION_ERROR = 105;
    STATUS_TIMEDOUT = 106;
    STATUS_BUSY = 107;

    // Range of 200 - 299 is for storage-specific errors
    STATUS_NO_SD_CARD = 201;
    STATUS_SD_CARD_UNFORMATTED = 202;
    STATUS_STORAGE_FAILURE = 203;
    STATUS_STORAGE_FULL = 204;
    STATUS_WRITE_PROTECT = 205;
    STATUS_FILE_NOT_FOUND = 206;
    STATUS_NOT_AN_OBJECT = 207;
    STATUS_INVALID_FILE = 208;
    STATUS_UNSUPPORTED_FILESYSTEM = 209;
    STATUS_FILESYSTEM_CHECK_FAILURE = 210;
    STATUS_FILENAME_TOO_LONG = 211;
    STATUS_SD_CLASS_NOT_SUPPORTED = 212;
    STATUS_LOW_SD_CAPACITY = 213;

    // Range of 300-399 for connectivity-related errors
    STATUS_STATUS_NO_NETWORK = 300;
    STATUS_NOT_CONNECTED = 301;
    STATUS_CONNECTION_ERROR = 302;
    STATUS_NO_DHCP_LEASE = 303;
    STATUS_NOT_CONFIGURED = 304;

    // Range of 1000 - 1099 is for application-specific errors
    STATUS_PERMISSION_DENIED = 1000;
    STATUS_WRONG_STATE = 1001;
    STATUS_INVALID_CONFIG = 1002;
    STATUS_INVALID_SEQUENCE_ID = 1003;
    STATUS_INVALID_CAMERA_ID = 1004;
    STATUS_LOW_BATTERY = 1005;
    STATUS_LENS_POSITION_NOT_SUPPORTED = 1006;
    // Camera rejects requested operation because the temperature is high for this operation.
    STATUS_HIGH_TEMPERATURE = 1007;

    // Range of 2000 - 2099 is for streaming-specific errors
    STATUS_CONNECTION_FAILED = 2000;
}
